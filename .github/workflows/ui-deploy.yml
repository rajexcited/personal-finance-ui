# Prepare UI artifact to deploy as statis site

name: UI Artifact Build & Deploy

# list of trigger events https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
on:
  workflow_run:
    workflows: ["UI Build"]
    types: [completed]
    branches:
      - master
  issues:
    types:
      - opened
      - reopened

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{github.event_name}}
  cancel-in-progress: true

env:
  ARTIFACT_NAME: personal-finance-ui-static

jobs:
  issue_type:
    name: Validate Test execution issue
    runs-on: ubuntu-latest
    environment: static-site
    outputs:
      isTestExecution: ${{ steps.test-execution.outputs.hasTestExecutionLabel }}
      milestoneBranch: ${{ steps.test-execution.outputs.milestoneBranch }}
    steps:
      - run: echo event name = ${{ github.event_name }}
      - run: echo github details=$CONTEXT_JSON
        env:
          CONTEXT_JSON: ${{ toJson(github) }}
      - id: test-execution-label-not-exists
        run: |
          echo issue is not supported for test artifact
          exit 1
        if: ${{ !contains(github.event.issue.labels.*.name, 'test execution') && github.event_name == 'issues' }}
      - id: test-execution-label-exists
        run: echo hasLabel=true >> $GITHUB_OUTPUT
        env:
          ALLOWED_TEST_USERS: ${{ secrets.ALLOWED_TEST_USERS }}
        if: >
          contains(github.event.issue.labels.*.name, 'test execution') &&
          contains(env.ALLOWED_TEST_USERS, github.event.sender.login)
      - id: milestone-exists
        run: echo milestoneValue=${{github.event.issue.milestone}} >> $GITHUB_OUTPUT
        if: github.event.issue.milestone != null
      - id: test-execution
        run: |
          hasLabel=false
          branchref=""
          # if test execution issue
          if [[ "$labelExists" == "true" ]]; then
              hasLabel=true
              branchref=refs/heads/milestone/$milestoneExists
          fi
          echo hasLabel=$hasLabel and milestoneBranch=$branchref
          echo hasTestExecutionLabel=$hasLabel >> $GITHUB_OUTPUT
          echo milestoneBranch=branchref >> $GITHUB_OUTPUT
        env:
          labelExists: ${{ steps.test-execution-label-exists.outputs.hasLabel }}
          milestoneExists: ${{ steps.milestone-exists.outputs.milestoneValue }}
          eventName: ${{ github.event_name }}

  build_artifact:
    name: create artifact
    runs-on: ubuntu-latest
    needs:
      - issue_type
    environment: static-site
    outputs:
      artifact_id: ${{ steps.upload-artifact-step.outputs.artifact-id }}
      artifact_url: ${{ steps.upload-artifact-step.outputs.artifact-url }}
      artifact_digest: ${{ steps.upload-artifact-step.outputs.artifact-digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.issue_type.outputs.milestoneBranch }}
      - name: Setup Node Latest
        # https://github.com/actions/setup-node
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
          cache: "npm"
      - run: npm --version
      - run: npm ci
      - run: cp src/demo/dummy.ts src/demo/index.ts
      - run: npm run build
        env:
          REACT_APP_BASE_PATH: ${{ vars.REACT_APP_BASE_PATH }}
          REACT_APP_REST_API_BASE_PATH: ${{ vars.REACT_APP_REST_API_BASE_PATH }}
          REACT_APP_MINIMUM_SESSION_TIME: ${{ vars.REACT_APP_MINIMUM_SESSION_TIME }}
          GENERATE_SOURCEMAP: ${{ needs.issue_type.outputs.isTestExecution }}
          PUBLIC_URL: ${{ vars.PUBLIC_URL }}
      - name: upload artifact
        id: upload-artifact-step
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./build/
          if-no-files-found: error
          retention-days: 2
          overwrite: true
      - name: artifact Outputs
        run: |
          echo Artifact ID is ${{ steps.upload-artifact-step.outputs.artifact-id }}
          echo Artifact URL is ${{ steps.upload-artifact-step.outputs.artifact-url }}
          echo Artifact DIGEST is ${{ steps.upload-artifact-step.outputs.artifact-digest }}

  deployment:
    name: deploy static UI
    runs-on: ubuntu-latest
    needs:
      - build_artifact
      - issue_type
    environment: static-site
    permissions:
      contents: write
      id-token: write
    steps:
      - name: trigger another workflow deploy static site in AWS
        run: |
          env_suffix="prod"
          if [[ "$isTestExecution" == "true" ]]; then
            env_suffix="test"
          fi
          curl -L --fail \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.ON_DEMAND_DEPLOY_UI_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"artifact_url\": \"$artifact_url\", \"repo_run_id\": \"$grun_id\", \"ui_repository\": \"$ui_repository\", \"artifact_name\": \"$artifact_name\", \"env_suffix\": \"$env_suffix\"}}"
        env:
          repo_name: ${{ vars.UI_DEPLOY_REPO_NAME }}
          repo_owner: ${{ github.repository_owner }}
          event_type: ${{ vars.UI_DEPLOY_EVENT_TYPE }}
          artifact_url: ${{ needs.build_artifact.outputs.artifact_url }}
          grun_id: ${{ github.run_id }}
          ui_repository: ${{ github.repository }}
          artifact_name: ${{ env.ARTIFACT_NAME }}
          isTestExecution: ${{ needs.issue_type.outputs.isTestExecution }}
